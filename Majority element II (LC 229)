/*
*
Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.
*
*/


Solution :-

vector<int> majorityElement(vector<int>& nums) {
        vector<int> ans;
        int count1=0;
        int count2=0;
        int num1=INT_MIN;
        int num2=INT_MIN;
        for(int i=0;i<nums.size();i++)
        {
            if(num1==nums[i])
            {
                count1++;
            }
            else if(num2==nums[i])
            {
                count2++;
            }
            else if(count1==0)
            {
                num1=nums[i];
                count1=1;
            }
            else if(count2==0)
            {
                num2=nums[i];
                count2=1;
            }
            else
            {
                count1--;
                count2--;
            }
        }
        count1=0;
        count2=0;
        int floor=nums.size()/3;
        bool flag1=false;
        bool flag2=false;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==num1 && num1!=INT_MIN)
            {
                count1++;
            }
            if(nums[i]==num2 && num2!=INT_MIN)
            {
                count2++;
                
            }
        }
       if(count1>floor)
       {
           ans.push_back(num1);
       }
        if(count2>floor)
        {
            ans.push_back(num2);
        }
        
        return ans;
    }
